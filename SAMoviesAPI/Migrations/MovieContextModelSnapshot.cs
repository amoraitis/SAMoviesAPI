// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using SAMoviesAPI.Contexts;
using System;

namespace SAMoviesAPI.Migrations
{
    [DbContext(typeof(MovieContext))]
    partial class MovieContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SAMoviesAPI.Models.Comment", b =>
                {
                    b.Property<int>("Key")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content");

                    b.Property<int?>("MovieKey");

                    b.Property<string>("UserFullname");

                    b.Property<int>("UserId");

                    b.HasKey("Key");

                    b.HasIndex("MovieKey");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("SAMoviesAPI.Models.Movie", b =>
                {
                    b.Property<int>("Key")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Id");

                    b.HasKey("Key");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("SAMoviesAPI.Models.Rating", b =>
                {
                    b.Property<int>("Key")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("MovieKey");

                    b.Property<int>("Rate");

                    b.Property<string>("UserFullname");

                    b.Property<int>("UserId");

                    b.HasKey("Key");

                    b.HasIndex("MovieKey");

                    b.ToTable("Rating");
                });

            modelBuilder.Entity("SAMoviesAPI.Models.Comment", b =>
                {
                    b.HasOne("SAMoviesAPI.Models.Movie")
                        .WithMany("Comments")
                        .HasForeignKey("MovieKey");
                });

            modelBuilder.Entity("SAMoviesAPI.Models.Rating", b =>
                {
                    b.HasOne("SAMoviesAPI.Models.Movie")
                        .WithMany("Ratings")
                        .HasForeignKey("MovieKey");
                });
#pragma warning restore 612, 618
        }
    }
}
